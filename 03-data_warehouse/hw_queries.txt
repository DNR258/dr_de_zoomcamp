CREATE OR REPLACE EXTERNAL TABLE `elaborate-tube-412620.taxi_rides_ny.external_green_tripdata`
OPTIONS (
	format = `PARQUET`, 
	uris = ['gs://dr-de-zoomcamp-98/green_taxi_2022/*'] 
         );

CREATE OR REPLACE TABLE elaborate-tube-412620.taxi_rides_ny.external_green_non_partitioned AS
SELECT * FROM elaborate-tube-412620.taxi_rides_ny.external_green_tripdata;

**Re create the materialized table fixing the UNIX DATE issue

CREATE OR REPLACE TABLE elaborate-tube-412620.taxi_rides_ny.external_green_non_partitioned
AS 
SELECT *, 
TIMESTAMP_MICROS(CAST(lpep_pickup_datetime / 1000 AS INT64)) AS cln_pickup_datetime,
TIMESTAMP_MICROS(CAST(lpep_dropoff_datetime / 1000 AS INT64)) AS cln_dropoff_datetime
FROM elaborate-tube-412620.taxi_rides_ny.external_green_tripdata;


QUESTION 1: 840402

SELECT COUNT(VendorID) 
FROM `elaborate-tube-412620.taxi_rides_ny.external_green_tripdata` 
LIMIT 10;

QUESTION 2: 0 MB and 6.41 MB

SELECT COUNT(DISTINCT(PULocationID)) 
FROM elaborate-tube-412620.taxi_rides_ny.external_green_tripdata;

SELECT COUNT(DISTINCT(PULocationID)) 
FROM elaborate-tube-412620.taxi_rides_ny.external_green_non_partitioned;

QUESTION 3: 1622

SELECT COUNT(fare_amount) 
FROM elaborate-tube-412620.taxi_rides_ny.external_green_tripdata 
WHERE fare_amount = 0;


QUESTION 4: 

CREATE OR REPLACE TABLE elaborate-tube-412620.taxi_rides_ny.external_green_partitioned
PARTITION BY DATE(cln_pickup_datetime)
CLUSTER BY PULocationID AS 
SELECT *, 
TIMESTAMP_MICROS(CAST(lpep_pickup_datetime / 1000 AS INT64)) AS cln_pickup_datetime,
TIMESTAMP_MICROS(CAST(lpep_dropoff_datetime / 1000 AS INT64)) AS cln_dropoff_datetime
FROM elaborate-tube-412620.taxi_rides_ny.external_green_tripdata;

QUESTION 5: 12.82 MB and 1.08 MB

SELECT DISTINCT(PULocationID) 
FROM elaborate-tube-412620.taxi_rides_ny.external_green_non_partitioned
WHERE CAST(cln_pickup_datetime AS DATE) > '2022-06-01'
AND CAST(cln_pickup_datetime AS DATE) <= '2022-06-30';     

SELECT DISTINCT(PULocationID) 
FROM elaborate-tube-412620.taxi_rides_ny.external_green_partitioned
WHERE CAST(cln_pickup_datetime AS DATE) > '2022-06-01'
AND CAST(cln_pickup_datetime AS DATE) <= '2022-06-30';


QUESTION 6:

GCP bucket

QUESTION 7:

False

QUESTION 8: 

The query is getting the answer from METADATA. 

